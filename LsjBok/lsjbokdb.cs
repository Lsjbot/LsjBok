#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class LsjBokDB : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCompany(Company instance);
  partial void UpdateCompany(Company instance);
  partial void DeleteCompany(Company instance);
  partial void InsertCompanytype(Companytype instance);
  partial void UpdateCompanytype(Companytype instance);
  partial void DeleteCompanytype(Companytype instance);
  partial void InsertFiscalyear(Fiscalyear instance);
  partial void UpdateFiscalyear(Fiscalyear instance);
  partial void DeleteFiscalyear(Fiscalyear instance);
  partial void InsertKonto(Konto instance);
  partial void UpdateKonto(Konto instance);
  partial void DeleteKonto(Konto instance);
  partial void InsertLoglist(Loglist instance);
  partial void UpdateLoglist(Loglist instance);
  partial void DeleteLoglist(Loglist instance);
  partial void InsertLsjBokUser(LsjBokUser instance);
  partial void UpdateLsjBokUser(LsjBokUser instance);
  partial void DeleteLsjBokUser(LsjBokUser instance);
  partial void InsertMall(Mall instance);
  partial void UpdateMall(Mall instance);
  partial void DeleteMall(Mall instance);
  partial void InsertMallrad(Mallrad instance);
  partial void UpdateMallrad(Mallrad instance);
  partial void DeleteMallrad(Mallrad instance);
  partial void InsertMomsentry(Momsentry instance);
  partial void UpdateMomsentry(Momsentry instance);
  partial void DeleteMomsentry(Momsentry instance);
  partial void InsertMomsperiod(Momsperiod instance);
  partial void UpdateMomsperiod(Momsperiod instance);
  partial void DeleteMomsperiod(Momsperiod instance);
  partial void InsertRad(Rad instance);
  partial void UpdateRad(Rad instance);
  partial void DeleteRad(Rad instance);
  partial void InsertVer(Ver instance);
  partial void UpdateVer(Ver instance);
  partial void DeleteVer(Ver instance);
  #endregion
	
	public LsjBokDB(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LsjBokDB(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LsjBokDB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LsjBokDB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Company> Company
	{
		get
		{
			return this.GetTable<Company>();
		}
	}
	
	public System.Data.Linq.Table<Companytype> Companytype
	{
		get
		{
			return this.GetTable<Companytype>();
		}
	}
	
	public System.Data.Linq.Table<Fiscalyear> Fiscalyear
	{
		get
		{
			return this.GetTable<Fiscalyear>();
		}
	}
	
	public System.Data.Linq.Table<Konto> Konto
	{
		get
		{
			return this.GetTable<Konto>();
		}
	}
	
	public System.Data.Linq.Table<Loglist> Loglist
	{
		get
		{
			return this.GetTable<Loglist>();
		}
	}
	
	public System.Data.Linq.Table<LsjBokUser> LsjBokUser
	{
		get
		{
			return this.GetTable<LsjBokUser>();
		}
	}
	
	public System.Data.Linq.Table<Mall> Mall
	{
		get
		{
			return this.GetTable<Mall>();
		}
	}
	
	public System.Data.Linq.Table<Mallrad> Mallrad
	{
		get
		{
			return this.GetTable<Mallrad>();
		}
	}
	
	public System.Data.Linq.Table<Momsentry> Momsentry
	{
		get
		{
			return this.GetTable<Momsentry>();
		}
	}
	
	public System.Data.Linq.Table<Momsperiod> Momsperiod
	{
		get
		{
			return this.GetTable<Momsperiod>();
		}
	}
	
	public System.Data.Linq.Table<Rad> Rad
	{
		get
		{
			return this.GetTable<Rad>();
		}
	}
	
	public System.Data.Linq.Table<Ver> Ver
	{
		get
		{
			return this.GetTable<Ver>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Orgnr;
	
	private int _Companytype;
	
	private string _Address;
	
	private string _Phone;
	
	private string _Email;
	
	private int _Momsfreq;
	
	private bool _Kontant;
	
	private int _Admin;
	
	private int _Creator;
	
	private System.DateTime _Creationdate;
	
	private EntityRef<LsjBokUser> _LsjBokUser;
	
	private EntityRef<Companytype> _CompanytypeCompanytype;
	
	private EntityRef<LsjBokUser> _CreatorLsjBokUser;
	
	private EntitySet<Fiscalyear> _Fiscalyear;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrgnrChanging(string value);
    partial void OnOrgnrChanged();
    partial void OnCompanytypeChanging(int value);
    partial void OnCompanytypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMomsfreqChanging(int value);
    partial void OnMomsfreqChanged();
    partial void OnKontantChanging(bool value);
    partial void OnKontantChanged();
    partial void OnAdminChanging(int value);
    partial void OnAdminChanged();
    partial void OnCreatorChanging(int value);
    partial void OnCreatorChanged();
    partial void OnCreationdateChanging(System.DateTime value);
    partial void OnCreationdateChanged();
    #endregion
	
	public Company()
	{
		this._LsjBokUser = default(EntityRef<LsjBokUser>);
		this._CompanytypeCompanytype = default(EntityRef<Companytype>);
		this._CreatorLsjBokUser = default(EntityRef<LsjBokUser>);
		this._Fiscalyear = new EntitySet<Fiscalyear>(new Action<Fiscalyear>(this.attach_Fiscalyear), new Action<Fiscalyear>(this.detach_Fiscalyear));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orgnr", DbType="Char(13) NOT NULL", CanBeNull=false)]
	public string Orgnr
	{
		get
		{
			return this._Orgnr;
		}
		set
		{
			if ((this._Orgnr != value))
			{
				this.OnOrgnrChanging(value);
				this.SendPropertyChanging();
				this._Orgnr = value;
				this.SendPropertyChanged("Orgnr");
				this.OnOrgnrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Companytype", DbType="Int NOT NULL")]
	public int Companytype
	{
		get
		{
			return this._Companytype;
		}
		set
		{
			if ((this._Companytype != value))
			{
				if (this._CompanytypeCompanytype.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompanytypeChanging(value);
				this.SendPropertyChanging();
				this._Companytype = value;
				this.SendPropertyChanged("Companytype");
				this.OnCompanytypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Momsfreq", DbType="Int NOT NULL")]
	public int Momsfreq
	{
		get
		{
			return this._Momsfreq;
		}
		set
		{
			if ((this._Momsfreq != value))
			{
				this.OnMomsfreqChanging(value);
				this.SendPropertyChanging();
				this._Momsfreq = value;
				this.SendPropertyChanged("Momsfreq");
				this.OnMomsfreqChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kontant", DbType="Bit NOT NULL")]
	public bool Kontant
	{
		get
		{
			return this._Kontant;
		}
		set
		{
			if ((this._Kontant != value))
			{
				this.OnKontantChanging(value);
				this.SendPropertyChanging();
				this._Kontant = value;
				this.SendPropertyChanged("Kontant");
				this.OnKontantChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="Int NOT NULL")]
	public int Admin
	{
		get
		{
			return this._Admin;
		}
		set
		{
			if ((this._Admin != value))
			{
				if (this._LsjBokUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdminChanging(value);
				this.SendPropertyChanging();
				this._Admin = value;
				this.SendPropertyChanged("Admin");
				this.OnAdminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int NOT NULL")]
	public int Creator
	{
		get
		{
			return this._Creator;
		}
		set
		{
			if ((this._Creator != value))
			{
				if (this._CreatorLsjBokUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatorChanging(value);
				this.SendPropertyChanging();
				this._Creator = value;
				this.SendPropertyChanged("Creator");
				this.OnCreatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creationdate", DbType="Date NOT NULL")]
	public System.DateTime Creationdate
	{
		get
		{
			return this._Creationdate;
		}
		set
		{
			if ((this._Creationdate != value))
			{
				this.OnCreationdateChanging(value);
				this.SendPropertyChanging();
				this._Creationdate = value;
				this.SendPropertyChanged("Creationdate");
				this.OnCreationdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Company__Admin__29572725", Storage="_LsjBokUser", ThisKey="Admin", OtherKey="Id", IsForeignKey=true)]
	public LsjBokUser LsjBokUser
	{
		get
		{
			return this._LsjBokUser.Entity;
		}
		set
		{
			LsjBokUser previousValue = this._LsjBokUser.Entity;
			if (((previousValue != value) 
						|| (this._LsjBokUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LsjBokUser.Entity = null;
					previousValue.Company.Remove(this);
				}
				this._LsjBokUser.Entity = value;
				if ((value != null))
				{
					value.Company.Add(this);
					this._Admin = value.Id;
				}
				else
				{
					this._Admin = default(int);
				}
				this.SendPropertyChanged("LsjBokUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Company__Company__286302EC", Storage="_CompanytypeCompanytype", ThisKey="Companytype", OtherKey="Id", IsForeignKey=true)]
	public Companytype CompanytypeCompanytype
	{
		get
		{
			return this._CompanytypeCompanytype.Entity;
		}
		set
		{
			Companytype previousValue = this._CompanytypeCompanytype.Entity;
			if (((previousValue != value) 
						|| (this._CompanytypeCompanytype.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanytypeCompanytype.Entity = null;
					previousValue.Company.Remove(this);
				}
				this._CompanytypeCompanytype.Entity = value;
				if ((value != null))
				{
					value.Company.Add(this);
					this._Companytype = value.Id;
				}
				else
				{
					this._Companytype = default(int);
				}
				this.SendPropertyChanged("CompanytypeCompanytype");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Company__Creator__2A4B4B5E", Storage="_CreatorLsjBokUser", ThisKey="Creator", OtherKey="Id", IsForeignKey=true)]
	public LsjBokUser CreatorLsjBokUser
	{
		get
		{
			return this._CreatorLsjBokUser.Entity;
		}
		set
		{
			LsjBokUser previousValue = this._CreatorLsjBokUser.Entity;
			if (((previousValue != value) 
						|| (this._CreatorLsjBokUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CreatorLsjBokUser.Entity = null;
					previousValue._Company__Creator__2A4B4B5E.Remove(this);
				}
				this._CreatorLsjBokUser.Entity = value;
				if ((value != null))
				{
					value._Company__Creator__2A4B4B5E.Add(this);
					this._Creator = value.Id;
				}
				else
				{
					this._Creator = default(int);
				}
				this.SendPropertyChanged("CreatorLsjBokUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Fiscalyea__Compa__2D27B809", Storage="_Fiscalyear", ThisKey="Id", OtherKey="Company", DeleteRule="NO ACTION")]
	public EntitySet<Fiscalyear> Fiscalyear
	{
		get
		{
			return this._Fiscalyear;
		}
		set
		{
			this._Fiscalyear.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Fiscalyear(Fiscalyear entity)
	{
		this.SendPropertyChanging();
		entity.CompanyCompany = this;
	}
	
	private void detach_Fiscalyear(Fiscalyear entity)
	{
		this.SendPropertyChanging();
		entity.CompanyCompany = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companytype")]
public partial class Companytype : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Shortname;
	
	private EntitySet<Company> _Company;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    #endregion
	
	public Companytype()
	{
		this._Company = new EntitySet<Company>(new Action<Company>(this.attach_Company), new Action<Company>(this.detach_Company));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortname", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Shortname
	{
		get
		{
			return this._Shortname;
		}
		set
		{
			if ((this._Shortname != value))
			{
				this.OnShortnameChanging(value);
				this.SendPropertyChanging();
				this._Shortname = value;
				this.SendPropertyChanged("Shortname");
				this.OnShortnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Company__Company__286302EC", Storage="_Company", ThisKey="Id", OtherKey="Companytype", DeleteRule="NO ACTION")]
	public EntitySet<Company> Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			this._Company.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Company(Company entity)
	{
		this.SendPropertyChanging();
		entity.CompanytypeCompanytype = this;
	}
	
	private void detach_Company(Company entity)
	{
		this.SendPropertyChanging();
		entity.CompanytypeCompanytype = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fiscalyear")]
public partial class Fiscalyear : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private int _Company;
	
	private System.DateTime _Startdate;
	
	private System.DateTime _Enddate;
	
	private bool _Closed;
	
	private int _Creator;
	
	private System.DateTime _Creationdate;
	
	private EntityRef<Company> _CompanyCompany;
	
	private EntityRef<LsjBokUser> _LsjBokUser;
	
	private EntitySet<Konto> _Konto;
	
	private EntitySet<Momsperiod> _Momsperiod;
	
	private EntitySet<Ver> _Ver;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyChanging(int value);
    partial void OnCompanyChanged();
    partial void OnStartdateChanging(System.DateTime value);
    partial void OnStartdateChanged();
    partial void OnEnddateChanging(System.DateTime value);
    partial void OnEnddateChanged();
    partial void OnClosedChanging(bool value);
    partial void OnClosedChanged();
    partial void OnCreatorChanging(int value);
    partial void OnCreatorChanged();
    partial void OnCreationdateChanging(System.DateTime value);
    partial void OnCreationdateChanged();
    #endregion
	
	public Fiscalyear()
	{
		this._CompanyCompany = default(EntityRef<Company>);
		this._LsjBokUser = default(EntityRef<LsjBokUser>);
		this._Konto = new EntitySet<Konto>(new Action<Konto>(this.attach_Konto), new Action<Konto>(this.detach_Konto));
		this._Momsperiod = new EntitySet<Momsperiod>(new Action<Momsperiod>(this.attach_Momsperiod), new Action<Momsperiod>(this.detach_Momsperiod));
		this._Ver = new EntitySet<Ver>(new Action<Ver>(this.attach_Ver), new Action<Ver>(this.detach_Ver));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="Int NOT NULL")]
	public int Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				if (this._CompanyCompany.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Startdate", DbType="Date NOT NULL")]
	public System.DateTime Startdate
	{
		get
		{
			return this._Startdate;
		}
		set
		{
			if ((this._Startdate != value))
			{
				this.OnStartdateChanging(value);
				this.SendPropertyChanging();
				this._Startdate = value;
				this.SendPropertyChanged("Startdate");
				this.OnStartdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enddate", DbType="Date NOT NULL")]
	public System.DateTime Enddate
	{
		get
		{
			return this._Enddate;
		}
		set
		{
			if ((this._Enddate != value))
			{
				this.OnEnddateChanging(value);
				this.SendPropertyChanging();
				this._Enddate = value;
				this.SendPropertyChanged("Enddate");
				this.OnEnddateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closed", DbType="Bit NOT NULL")]
	public bool Closed
	{
		get
		{
			return this._Closed;
		}
		set
		{
			if ((this._Closed != value))
			{
				this.OnClosedChanging(value);
				this.SendPropertyChanging();
				this._Closed = value;
				this.SendPropertyChanged("Closed");
				this.OnClosedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int NOT NULL")]
	public int Creator
	{
		get
		{
			return this._Creator;
		}
		set
		{
			if ((this._Creator != value))
			{
				if (this._LsjBokUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatorChanging(value);
				this.SendPropertyChanging();
				this._Creator = value;
				this.SendPropertyChanged("Creator");
				this.OnCreatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creationdate", DbType="Date NOT NULL")]
	public System.DateTime Creationdate
	{
		get
		{
			return this._Creationdate;
		}
		set
		{
			if ((this._Creationdate != value))
			{
				this.OnCreationdateChanging(value);
				this.SendPropertyChanging();
				this._Creationdate = value;
				this.SendPropertyChanged("Creationdate");
				this.OnCreationdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Fiscalyea__Compa__2D27B809", Storage="_CompanyCompany", ThisKey="Company", OtherKey="Id", IsForeignKey=true)]
	public Company CompanyCompany
	{
		get
		{
			return this._CompanyCompany.Entity;
		}
		set
		{
			Company previousValue = this._CompanyCompany.Entity;
			if (((previousValue != value) 
						|| (this._CompanyCompany.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanyCompany.Entity = null;
					previousValue.Fiscalyear.Remove(this);
				}
				this._CompanyCompany.Entity = value;
				if ((value != null))
				{
					value.Fiscalyear.Add(this);
					this._Company = value.Id;
				}
				else
				{
					this._Company = default(int);
				}
				this.SendPropertyChanged("CompanyCompany");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Fiscalyea__Creat__2E1BDC42", Storage="_LsjBokUser", ThisKey="Creator", OtherKey="Id", IsForeignKey=true)]
	public LsjBokUser LsjBokUser
	{
		get
		{
			return this._LsjBokUser.Entity;
		}
		set
		{
			LsjBokUser previousValue = this._LsjBokUser.Entity;
			if (((previousValue != value) 
						|| (this._LsjBokUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LsjBokUser.Entity = null;
					previousValue.Fiscalyear.Remove(this);
				}
				this._LsjBokUser.Entity = value;
				if ((value != null))
				{
					value.Fiscalyear.Add(this);
					this._Creator = value.Id;
				}
				else
				{
					this._Creator = default(int);
				}
				this.SendPropertyChanged("LsjBokUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Konto__Year__30F848ED", Storage="_Konto", ThisKey="Id", OtherKey="Year", DeleteRule="NO ACTION")]
	public EntitySet<Konto> Konto
	{
		get
		{
			return this._Konto;
		}
		set
		{
			this._Konto.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Momsperio__Fisca__3C69FB99", Storage="_Momsperiod", ThisKey="Id", OtherKey="Fiscal", DeleteRule="NO ACTION")]
	public EntitySet<Momsperiod> Momsperiod
	{
		get
		{
			return this._Momsperiod;
		}
		set
		{
			this._Momsperiod.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ver__Year__34C8D9D1", Storage="_Ver", ThisKey="Id", OtherKey="Year", DeleteRule="NO ACTION")]
	public EntitySet<Ver> Ver
	{
		get
		{
			return this._Ver;
		}
		set
		{
			this._Ver.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Konto(Konto entity)
	{
		this.SendPropertyChanging();
		entity.Fiscalyear = this;
	}
	
	private void detach_Konto(Konto entity)
	{
		this.SendPropertyChanging();
		entity.Fiscalyear = null;
	}
	
	private void attach_Momsperiod(Momsperiod entity)
	{
		this.SendPropertyChanging();
		entity.Fiscalyear = this;
	}
	
	private void detach_Momsperiod(Momsperiod entity)
	{
		this.SendPropertyChanging();
		entity.Fiscalyear = null;
	}
	
	private void attach_Ver(Ver entity)
	{
		this.SendPropertyChanging();
		entity.Fiscalyear = this;
	}
	
	private void detach_Ver(Ver entity)
	{
		this.SendPropertyChanging();
		entity.Fiscalyear = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Konto")]
public partial class Konto : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Year;
	
	private string _Name;
	
	private int _Number;
	
	private int _Kontotyp;
	
	private int _Kontogrupp;
	
	private int _Konto1;
	
	private int _Konto2;
	
	private int _Konto3;
	
	private decimal _IB;
	
	private decimal _UB;
	
	private int _Creator;
	
	private System.DateTime _Creationdate;
	
	private EntityRef<LsjBokUser> _LsjBokUser;
	
	private EntityRef<Fiscalyear> _Fiscalyear;
	
	private EntitySet<Rad> _Rad;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnKontotypChanging(int value);
    partial void OnKontotypChanged();
    partial void OnKontogruppChanging(int value);
    partial void OnKontogruppChanged();
    partial void OnKonto1Changing(int value);
    partial void OnKonto1Changed();
    partial void OnKonto2Changing(int value);
    partial void OnKonto2Changed();
    partial void OnKonto3Changing(int value);
    partial void OnKonto3Changed();
    partial void OnIBChanging(decimal value);
    partial void OnIBChanged();
    partial void OnUBChanging(decimal value);
    partial void OnUBChanged();
    partial void OnCreatorChanging(int value);
    partial void OnCreatorChanged();
    partial void OnCreationdateChanging(System.DateTime value);
    partial void OnCreationdateChanged();
    #endregion
	
	public Konto()
	{
		this._LsjBokUser = default(EntityRef<LsjBokUser>);
		this._Fiscalyear = default(EntityRef<Fiscalyear>);
		this._Rad = new EntitySet<Rad>(new Action<Rad>(this.attach_Rad), new Action<Rad>(this.detach_Rad));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
	public int Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				if (this._Fiscalyear.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
	public int Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kontotyp", DbType="Int NOT NULL")]
	public int Kontotyp
	{
		get
		{
			return this._Kontotyp;
		}
		set
		{
			if ((this._Kontotyp != value))
			{
				this.OnKontotypChanging(value);
				this.SendPropertyChanging();
				this._Kontotyp = value;
				this.SendPropertyChanged("Kontotyp");
				this.OnKontotypChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kontogrupp", DbType="Int NOT NULL")]
	public int Kontogrupp
	{
		get
		{
			return this._Kontogrupp;
		}
		set
		{
			if ((this._Kontogrupp != value))
			{
				this.OnKontogruppChanging(value);
				this.SendPropertyChanging();
				this._Kontogrupp = value;
				this.SendPropertyChanged("Kontogrupp");
				this.OnKontogruppChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konto1", DbType="Int NOT NULL")]
	public int Konto1
	{
		get
		{
			return this._Konto1;
		}
		set
		{
			if ((this._Konto1 != value))
			{
				this.OnKonto1Changing(value);
				this.SendPropertyChanging();
				this._Konto1 = value;
				this.SendPropertyChanged("Konto1");
				this.OnKonto1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konto2", DbType="Int NOT NULL")]
	public int Konto2
	{
		get
		{
			return this._Konto2;
		}
		set
		{
			if ((this._Konto2 != value))
			{
				this.OnKonto2Changing(value);
				this.SendPropertyChanging();
				this._Konto2 = value;
				this.SendPropertyChanged("Konto2");
				this.OnKonto2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konto3", DbType="Int NOT NULL")]
	public int Konto3
	{
		get
		{
			return this._Konto3;
		}
		set
		{
			if ((this._Konto3 != value))
			{
				this.OnKonto3Changing(value);
				this.SendPropertyChanging();
				this._Konto3 = value;
				this.SendPropertyChanged("Konto3");
				this.OnKonto3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IB", DbType="Money NOT NULL")]
	public decimal IB
	{
		get
		{
			return this._IB;
		}
		set
		{
			if ((this._IB != value))
			{
				this.OnIBChanging(value);
				this.SendPropertyChanging();
				this._IB = value;
				this.SendPropertyChanged("IB");
				this.OnIBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UB", DbType="Money NOT NULL")]
	public decimal UB
	{
		get
		{
			return this._UB;
		}
		set
		{
			if ((this._UB != value))
			{
				this.OnUBChanging(value);
				this.SendPropertyChanging();
				this._UB = value;
				this.SendPropertyChanged("UB");
				this.OnUBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int NOT NULL")]
	public int Creator
	{
		get
		{
			return this._Creator;
		}
		set
		{
			if ((this._Creator != value))
			{
				if (this._LsjBokUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatorChanging(value);
				this.SendPropertyChanging();
				this._Creator = value;
				this.SendPropertyChanged("Creator");
				this.OnCreatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creationdate", DbType="Date NOT NULL")]
	public System.DateTime Creationdate
	{
		get
		{
			return this._Creationdate;
		}
		set
		{
			if ((this._Creationdate != value))
			{
				this.OnCreationdateChanging(value);
				this.SendPropertyChanging();
				this._Creationdate = value;
				this.SendPropertyChanged("Creationdate");
				this.OnCreationdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Konto__Creator__31EC6D26", Storage="_LsjBokUser", ThisKey="Creator", OtherKey="Id", IsForeignKey=true)]
	public LsjBokUser LsjBokUser
	{
		get
		{
			return this._LsjBokUser.Entity;
		}
		set
		{
			LsjBokUser previousValue = this._LsjBokUser.Entity;
			if (((previousValue != value) 
						|| (this._LsjBokUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LsjBokUser.Entity = null;
					previousValue.Konto.Remove(this);
				}
				this._LsjBokUser.Entity = value;
				if ((value != null))
				{
					value.Konto.Add(this);
					this._Creator = value.Id;
				}
				else
				{
					this._Creator = default(int);
				}
				this.SendPropertyChanged("LsjBokUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Konto__Year__30F848ED", Storage="_Fiscalyear", ThisKey="Year", OtherKey="Id", IsForeignKey=true)]
	public Fiscalyear Fiscalyear
	{
		get
		{
			return this._Fiscalyear.Entity;
		}
		set
		{
			Fiscalyear previousValue = this._Fiscalyear.Entity;
			if (((previousValue != value) 
						|| (this._Fiscalyear.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Fiscalyear.Entity = null;
					previousValue.Konto.Remove(this);
				}
				this._Fiscalyear.Entity = value;
				if ((value != null))
				{
					value.Konto.Add(this);
					this._Year = value.Id;
				}
				else
				{
					this._Year = default(int);
				}
				this.SendPropertyChanged("Fiscalyear");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Rad__Konto__398D8EEE", Storage="_Rad", ThisKey="Id", OtherKey="Konto", DeleteRule="NO ACTION")]
	public EntitySet<Rad> Rad
	{
		get
		{
			return this._Rad;
		}
		set
		{
			this._Rad.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Rad(Rad entity)
	{
		this.SendPropertyChanging();
		entity.KontoKonto = this;
	}
	
	private void detach_Rad(Rad entity)
	{
		this.SendPropertyChanging();
		entity.KontoKonto = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loglist")]
public partial class Loglist : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Description;
	
	private int _Event;
	
	private int _Creator;
	
	private System.DateTime _Creationdate;
	
	private EntityRef<LsjBokUser> _LsjBokUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEventChanging(int value);
    partial void OnEventChanged();
    partial void OnCreatorChanging(int value);
    partial void OnCreatorChanged();
    partial void OnCreationdateChanging(System.DateTime value);
    partial void OnCreationdateChanged();
    #endregion
	
	public Loglist()
	{
		this._LsjBokUser = default(EntityRef<LsjBokUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="Int NOT NULL")]
	public int Event
	{
		get
		{
			return this._Event;
		}
		set
		{
			if ((this._Event != value))
			{
				this.OnEventChanging(value);
				this.SendPropertyChanging();
				this._Event = value;
				this.SendPropertyChanged("Event");
				this.OnEventChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int NOT NULL")]
	public int Creator
	{
		get
		{
			return this._Creator;
		}
		set
		{
			if ((this._Creator != value))
			{
				if (this._LsjBokUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatorChanging(value);
				this.SendPropertyChanging();
				this._Creator = value;
				this.SendPropertyChanged("Creator");
				this.OnCreatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creationdate", DbType="Date NOT NULL")]
	public System.DateTime Creationdate
	{
		get
		{
			return this._Creationdate;
		}
		set
		{
			if ((this._Creationdate != value))
			{
				this.OnCreationdateChanging(value);
				this.SendPropertyChanging();
				this._Creationdate = value;
				this.SendPropertyChanged("Creationdate");
				this.OnCreationdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Loglist__Creator__48CFD27E", Storage="_LsjBokUser", ThisKey="Creator", OtherKey="Id", IsForeignKey=true)]
	public LsjBokUser LsjBokUser
	{
		get
		{
			return this._LsjBokUser.Entity;
		}
		set
		{
			LsjBokUser previousValue = this._LsjBokUser.Entity;
			if (((previousValue != value) 
						|| (this._LsjBokUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LsjBokUser.Entity = null;
					previousValue.Loglist.Remove(this);
				}
				this._LsjBokUser.Entity = value;
				if ((value != null))
				{
					value.Loglist.Add(this);
					this._Creator = value.Id;
				}
				else
				{
					this._Creator = default(int);
				}
				this.SendPropertyChanged("LsjBokUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LsjBokUser")]
public partial class LsjBokUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Pwdhash;
	
	private EntitySet<Company> _Company;
	
	private EntitySet<Company> @__Company__Creator__2A4B4B5E;
	
	private EntitySet<Fiscalyear> _Fiscalyear;
	
	private EntitySet<Konto> _Konto;
	
	private EntitySet<Loglist> _Loglist;
	
	private EntitySet<Mall> _Mall;
	
	private EntitySet<Momsperiod> _Momsperiod;
	
	private EntitySet<Ver> _Ver;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPwdhashChanging(string value);
    partial void OnPwdhashChanged();
    #endregion
	
	public LsjBokUser()
	{
		this._Company = new EntitySet<Company>(new Action<Company>(this.attach_Company), new Action<Company>(this.detach_Company));
		this.@__Company__Creator__2A4B4B5E = new EntitySet<Company>(new Action<Company>(this.attach__Company__Creator__2A4B4B5E), new Action<Company>(this.detach__Company__Creator__2A4B4B5E));
		this._Fiscalyear = new EntitySet<Fiscalyear>(new Action<Fiscalyear>(this.attach_Fiscalyear), new Action<Fiscalyear>(this.detach_Fiscalyear));
		this._Konto = new EntitySet<Konto>(new Action<Konto>(this.attach_Konto), new Action<Konto>(this.detach_Konto));
		this._Loglist = new EntitySet<Loglist>(new Action<Loglist>(this.attach_Loglist), new Action<Loglist>(this.detach_Loglist));
		this._Mall = new EntitySet<Mall>(new Action<Mall>(this.attach_Mall), new Action<Mall>(this.detach_Mall));
		this._Momsperiod = new EntitySet<Momsperiod>(new Action<Momsperiod>(this.attach_Momsperiod), new Action<Momsperiod>(this.detach_Momsperiod));
		this._Ver = new EntitySet<Ver>(new Action<Ver>(this.attach_Ver), new Action<Ver>(this.detach_Ver));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwdhash", DbType="Char(32)")]
	public string Pwdhash
	{
		get
		{
			return this._Pwdhash;
		}
		set
		{
			if ((this._Pwdhash != value))
			{
				this.OnPwdhashChanging(value);
				this.SendPropertyChanging();
				this._Pwdhash = value;
				this.SendPropertyChanged("Pwdhash");
				this.OnPwdhashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Company__Admin__29572725", Storage="_Company", ThisKey="Id", OtherKey="Admin", DeleteRule="NO ACTION")]
	public EntitySet<Company> Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			this._Company.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Company__Creator__2A4B4B5E", Storage="__Company__Creator__2A4B4B5E", ThisKey="Id", OtherKey="Creator", DeleteRule="NO ACTION")]
	public EntitySet<Company> _Company__Creator__2A4B4B5E
	{
		get
		{
			return this.@__Company__Creator__2A4B4B5E;
		}
		set
		{
			this.@__Company__Creator__2A4B4B5E.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Fiscalyea__Creat__2E1BDC42", Storage="_Fiscalyear", ThisKey="Id", OtherKey="Creator", DeleteRule="NO ACTION")]
	public EntitySet<Fiscalyear> Fiscalyear
	{
		get
		{
			return this._Fiscalyear;
		}
		set
		{
			this._Fiscalyear.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Konto__Creator__31EC6D26", Storage="_Konto", ThisKey="Id", OtherKey="Creator", DeleteRule="NO ACTION")]
	public EntitySet<Konto> Konto
	{
		get
		{
			return this._Konto;
		}
		set
		{
			this._Konto.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Loglist__Creator__48CFD27E", Storage="_Loglist", ThisKey="Id", OtherKey="Creator", DeleteRule="NO ACTION")]
	public EntitySet<Loglist> Loglist
	{
		get
		{
			return this._Loglist;
		}
		set
		{
			this._Loglist.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Mall__Creator__4316F928", Storage="_Mall", ThisKey="Id", OtherKey="Creator", DeleteRule="NO ACTION")]
	public EntitySet<Mall> Mall
	{
		get
		{
			return this._Mall;
		}
		set
		{
			this._Mall.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Momsperio__Creat__3D5E1FD2", Storage="_Momsperiod", ThisKey="Id", OtherKey="Creator", DeleteRule="NO ACTION")]
	public EntitySet<Momsperiod> Momsperiod
	{
		get
		{
			return this._Momsperiod;
		}
		set
		{
			this._Momsperiod.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ver__Creator__35BCFE0A", Storage="_Ver", ThisKey="Id", OtherKey="Creator", DeleteRule="NO ACTION")]
	public EntitySet<Ver> Ver
	{
		get
		{
			return this._Ver;
		}
		set
		{
			this._Ver.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Company(Company entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = this;
	}
	
	private void detach_Company(Company entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = null;
	}
	
	private void attach__Company__Creator__2A4B4B5E(Company entity)
	{
		this.SendPropertyChanging();
		entity.CreatorLsjBokUser = this;
	}
	
	private void detach__Company__Creator__2A4B4B5E(Company entity)
	{
		this.SendPropertyChanging();
		entity.CreatorLsjBokUser = null;
	}
	
	private void attach_Fiscalyear(Fiscalyear entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = this;
	}
	
	private void detach_Fiscalyear(Fiscalyear entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = null;
	}
	
	private void attach_Konto(Konto entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = this;
	}
	
	private void detach_Konto(Konto entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = null;
	}
	
	private void attach_Loglist(Loglist entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = this;
	}
	
	private void detach_Loglist(Loglist entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = null;
	}
	
	private void attach_Mall(Mall entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = this;
	}
	
	private void detach_Mall(Mall entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = null;
	}
	
	private void attach_Momsperiod(Momsperiod entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = this;
	}
	
	private void detach_Momsperiod(Momsperiod entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = null;
	}
	
	private void attach_Ver(Ver entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = this;
	}
	
	private void detach_Ver(Ver entity)
	{
		this.SendPropertyChanging();
		entity.LsjBokUser = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mall")]
public partial class Mall : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Description;
	
	private int _Creator;
	
	private System.DateTime _Creationdate;
	
	private EntityRef<LsjBokUser> _LsjBokUser;
	
	private EntitySet<Mallrad> _Mallrad;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatorChanging(int value);
    partial void OnCreatorChanged();
    partial void OnCreationdateChanging(System.DateTime value);
    partial void OnCreationdateChanged();
    #endregion
	
	public Mall()
	{
		this._LsjBokUser = default(EntityRef<LsjBokUser>);
		this._Mallrad = new EntitySet<Mallrad>(new Action<Mallrad>(this.attach_Mallrad), new Action<Mallrad>(this.detach_Mallrad));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int NOT NULL")]
	public int Creator
	{
		get
		{
			return this._Creator;
		}
		set
		{
			if ((this._Creator != value))
			{
				if (this._LsjBokUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatorChanging(value);
				this.SendPropertyChanging();
				this._Creator = value;
				this.SendPropertyChanged("Creator");
				this.OnCreatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creationdate", DbType="Date NOT NULL")]
	public System.DateTime Creationdate
	{
		get
		{
			return this._Creationdate;
		}
		set
		{
			if ((this._Creationdate != value))
			{
				this.OnCreationdateChanging(value);
				this.SendPropertyChanging();
				this._Creationdate = value;
				this.SendPropertyChanged("Creationdate");
				this.OnCreationdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Mall__Creator__4316F928", Storage="_LsjBokUser", ThisKey="Creator", OtherKey="Id", IsForeignKey=true)]
	public LsjBokUser LsjBokUser
	{
		get
		{
			return this._LsjBokUser.Entity;
		}
		set
		{
			LsjBokUser previousValue = this._LsjBokUser.Entity;
			if (((previousValue != value) 
						|| (this._LsjBokUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LsjBokUser.Entity = null;
					previousValue.Mall.Remove(this);
				}
				this._LsjBokUser.Entity = value;
				if ((value != null))
				{
					value.Mall.Add(this);
					this._Creator = value.Id;
				}
				else
				{
					this._Creator = default(int);
				}
				this.SendPropertyChanged("LsjBokUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Mallrad__Mall__45F365D3", Storage="_Mallrad", ThisKey="Id", OtherKey="Mall", DeleteRule="NO ACTION")]
	public EntitySet<Mallrad> Mallrad
	{
		get
		{
			return this._Mallrad;
		}
		set
		{
			this._Mallrad.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Mallrad(Mallrad entity)
	{
		this.SendPropertyChanging();
		entity.MallMall = this;
	}
	
	private void detach_Mallrad(Mallrad entity)
	{
		this.SendPropertyChanging();
		entity.MallMall = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mallrad")]
public partial class Mallrad : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Mall;
	
	private int _Kontonr;
	
	private decimal _Amount;
	
	private EntityRef<Mall> _MallMall;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMallChanging(int value);
    partial void OnMallChanged();
    partial void OnKontonrChanging(int value);
    partial void OnKontonrChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
	
	public Mallrad()
	{
		this._MallMall = default(EntityRef<Mall>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mall", DbType="Int NOT NULL")]
	public int Mall
	{
		get
		{
			return this._Mall;
		}
		set
		{
			if ((this._Mall != value))
			{
				if (this._MallMall.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMallChanging(value);
				this.SendPropertyChanging();
				this._Mall = value;
				this.SendPropertyChanged("Mall");
				this.OnMallChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kontonr", DbType="Int NOT NULL")]
	public int Kontonr
	{
		get
		{
			return this._Kontonr;
		}
		set
		{
			if ((this._Kontonr != value))
			{
				this.OnKontonrChanging(value);
				this.SendPropertyChanging();
				this._Kontonr = value;
				this.SendPropertyChanged("Kontonr");
				this.OnKontonrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
	public decimal Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Mallrad__Mall__45F365D3", Storage="_MallMall", ThisKey="Mall", OtherKey="Id", IsForeignKey=true)]
	public Mall MallMall
	{
		get
		{
			return this._MallMall.Entity;
		}
		set
		{
			Mall previousValue = this._MallMall.Entity;
			if (((previousValue != value) 
						|| (this._MallMall.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MallMall.Entity = null;
					previousValue.Mallrad.Remove(this);
				}
				this._MallMall.Entity = value;
				if ((value != null))
				{
					value.Mallrad.Add(this);
					this._Mall = value.Id;
				}
				else
				{
					this._Mall = default(int);
				}
				this.SendPropertyChanged("MallMall");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Momsentry")]
public partial class Momsentry : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Period;
	
	private int _Field;
	
	private decimal _Amount;
	
	private EntityRef<Momsperiod> _Momsperiod;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodChanging(int value);
    partial void OnPeriodChanged();
    partial void OnFieldChanging(int value);
    partial void OnFieldChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
	
	public Momsentry()
	{
		this._Momsperiod = default(EntityRef<Momsperiod>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Int NOT NULL")]
	public int Period
	{
		get
		{
			return this._Period;
		}
		set
		{
			if ((this._Period != value))
			{
				if (this._Momsperiod.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPeriodChanging(value);
				this.SendPropertyChanging();
				this._Period = value;
				this.SendPropertyChanged("Period");
				this.OnPeriodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field", DbType="Int NOT NULL")]
	public int Field
	{
		get
		{
			return this._Field;
		}
		set
		{
			if ((this._Field != value))
			{
				this.OnFieldChanging(value);
				this.SendPropertyChanging();
				this._Field = value;
				this.SendPropertyChanged("Field");
				this.OnFieldChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
	public decimal Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Momsentry__Perio__403A8C7D", Storage="_Momsperiod", ThisKey="Period", OtherKey="Id", IsForeignKey=true)]
	public Momsperiod Momsperiod
	{
		get
		{
			return this._Momsperiod.Entity;
		}
		set
		{
			Momsperiod previousValue = this._Momsperiod.Entity;
			if (((previousValue != value) 
						|| (this._Momsperiod.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Momsperiod.Entity = null;
					previousValue.Momsentry.Remove(this);
				}
				this._Momsperiod.Entity = value;
				if ((value != null))
				{
					value.Momsentry.Add(this);
					this._Period = value.Id;
				}
				else
				{
					this._Period = default(int);
				}
				this.SendPropertyChanged("Momsperiod");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Momsperiod")]
public partial class Momsperiod : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private int _Fiscal;
	
	private System.DateTime _Startdate;
	
	private System.DateTime _Enddate;
	
	private decimal _Net;
	
	private bool _Closed;
	
	private string _Rapportfil;
	
	private int _Creator;
	
	private System.DateTime _Creationdate;
	
	private EntitySet<Momsentry> _Momsentry;
	
	private EntityRef<LsjBokUser> _LsjBokUser;
	
	private EntityRef<Fiscalyear> _Fiscalyear;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFiscalChanging(int value);
    partial void OnFiscalChanged();
    partial void OnStartdateChanging(System.DateTime value);
    partial void OnStartdateChanged();
    partial void OnEnddateChanging(System.DateTime value);
    partial void OnEnddateChanged();
    partial void OnNetChanging(decimal value);
    partial void OnNetChanged();
    partial void OnClosedChanging(bool value);
    partial void OnClosedChanged();
    partial void OnRapportfilChanging(string value);
    partial void OnRapportfilChanged();
    partial void OnCreatorChanging(int value);
    partial void OnCreatorChanged();
    partial void OnCreationdateChanging(System.DateTime value);
    partial void OnCreationdateChanged();
    #endregion
	
	public Momsperiod()
	{
		this._Momsentry = new EntitySet<Momsentry>(new Action<Momsentry>(this.attach_Momsentry), new Action<Momsentry>(this.detach_Momsentry));
		this._LsjBokUser = default(EntityRef<LsjBokUser>);
		this._Fiscalyear = default(EntityRef<Fiscalyear>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fiscal", DbType="Int NOT NULL")]
	public int Fiscal
	{
		get
		{
			return this._Fiscal;
		}
		set
		{
			if ((this._Fiscal != value))
			{
				if (this._Fiscalyear.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFiscalChanging(value);
				this.SendPropertyChanging();
				this._Fiscal = value;
				this.SendPropertyChanged("Fiscal");
				this.OnFiscalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Startdate", DbType="Date NOT NULL")]
	public System.DateTime Startdate
	{
		get
		{
			return this._Startdate;
		}
		set
		{
			if ((this._Startdate != value))
			{
				this.OnStartdateChanging(value);
				this.SendPropertyChanging();
				this._Startdate = value;
				this.SendPropertyChanged("Startdate");
				this.OnStartdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enddate", DbType="Date NOT NULL")]
	public System.DateTime Enddate
	{
		get
		{
			return this._Enddate;
		}
		set
		{
			if ((this._Enddate != value))
			{
				this.OnEnddateChanging(value);
				this.SendPropertyChanging();
				this._Enddate = value;
				this.SendPropertyChanged("Enddate");
				this.OnEnddateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Money NOT NULL")]
	public decimal Net
	{
		get
		{
			return this._Net;
		}
		set
		{
			if ((this._Net != value))
			{
				this.OnNetChanging(value);
				this.SendPropertyChanging();
				this._Net = value;
				this.SendPropertyChanged("Net");
				this.OnNetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closed", DbType="Bit NOT NULL")]
	public bool Closed
	{
		get
		{
			return this._Closed;
		}
		set
		{
			if ((this._Closed != value))
			{
				this.OnClosedChanging(value);
				this.SendPropertyChanging();
				this._Closed = value;
				this.SendPropertyChanged("Closed");
				this.OnClosedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rapportfil", DbType="NVarChar(300)")]
	public string Rapportfil
	{
		get
		{
			return this._Rapportfil;
		}
		set
		{
			if ((this._Rapportfil != value))
			{
				this.OnRapportfilChanging(value);
				this.SendPropertyChanging();
				this._Rapportfil = value;
				this.SendPropertyChanged("Rapportfil");
				this.OnRapportfilChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int NOT NULL")]
	public int Creator
	{
		get
		{
			return this._Creator;
		}
		set
		{
			if ((this._Creator != value))
			{
				if (this._LsjBokUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatorChanging(value);
				this.SendPropertyChanging();
				this._Creator = value;
				this.SendPropertyChanged("Creator");
				this.OnCreatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creationdate", DbType="Date NOT NULL")]
	public System.DateTime Creationdate
	{
		get
		{
			return this._Creationdate;
		}
		set
		{
			if ((this._Creationdate != value))
			{
				this.OnCreationdateChanging(value);
				this.SendPropertyChanging();
				this._Creationdate = value;
				this.SendPropertyChanged("Creationdate");
				this.OnCreationdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Momsentry__Perio__403A8C7D", Storage="_Momsentry", ThisKey="Id", OtherKey="Period", DeleteRule="NO ACTION")]
	public EntitySet<Momsentry> Momsentry
	{
		get
		{
			return this._Momsentry;
		}
		set
		{
			this._Momsentry.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Momsperio__Creat__3D5E1FD2", Storage="_LsjBokUser", ThisKey="Creator", OtherKey="Id", IsForeignKey=true)]
	public LsjBokUser LsjBokUser
	{
		get
		{
			return this._LsjBokUser.Entity;
		}
		set
		{
			LsjBokUser previousValue = this._LsjBokUser.Entity;
			if (((previousValue != value) 
						|| (this._LsjBokUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LsjBokUser.Entity = null;
					previousValue.Momsperiod.Remove(this);
				}
				this._LsjBokUser.Entity = value;
				if ((value != null))
				{
					value.Momsperiod.Add(this);
					this._Creator = value.Id;
				}
				else
				{
					this._Creator = default(int);
				}
				this.SendPropertyChanged("LsjBokUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Momsperio__Fisca__3C69FB99", Storage="_Fiscalyear", ThisKey="Fiscal", OtherKey="Id", IsForeignKey=true)]
	public Fiscalyear Fiscalyear
	{
		get
		{
			return this._Fiscalyear.Entity;
		}
		set
		{
			Fiscalyear previousValue = this._Fiscalyear.Entity;
			if (((previousValue != value) 
						|| (this._Fiscalyear.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Fiscalyear.Entity = null;
					previousValue.Momsperiod.Remove(this);
				}
				this._Fiscalyear.Entity = value;
				if ((value != null))
				{
					value.Momsperiod.Add(this);
					this._Fiscal = value.Id;
				}
				else
				{
					this._Fiscal = default(int);
				}
				this.SendPropertyChanged("Fiscalyear");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Momsentry(Momsentry entity)
	{
		this.SendPropertyChanging();
		entity.Momsperiod = this;
	}
	
	private void detach_Momsentry(Momsentry entity)
	{
		this.SendPropertyChanging();
		entity.Momsperiod = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rad")]
public partial class Rad : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Ver;
	
	private int _Konto;
	
	private decimal _Amount;
	
	private EntityRef<Konto> _KontoKonto;
	
	private EntityRef<Ver> _VerVer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVerChanging(int value);
    partial void OnVerChanged();
    partial void OnKontoChanging(int value);
    partial void OnKontoChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
	
	public Rad()
	{
		this._KontoKonto = default(EntityRef<Konto>);
		this._VerVer = default(EntityRef<Ver>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ver", DbType="Int NOT NULL")]
	public int Ver
	{
		get
		{
			return this._Ver;
		}
		set
		{
			if ((this._Ver != value))
			{
				if (this._VerVer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVerChanging(value);
				this.SendPropertyChanging();
				this._Ver = value;
				this.SendPropertyChanged("Ver");
				this.OnVerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konto", DbType="Int NOT NULL")]
	public int Konto
	{
		get
		{
			return this._Konto;
		}
		set
		{
			if ((this._Konto != value))
			{
				if (this._KontoKonto.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnKontoChanging(value);
				this.SendPropertyChanging();
				this._Konto = value;
				this.SendPropertyChanged("Konto");
				this.OnKontoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
	public decimal Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Rad__Konto__398D8EEE", Storage="_KontoKonto", ThisKey="Konto", OtherKey="Id", IsForeignKey=true)]
	public Konto KontoKonto
	{
		get
		{
			return this._KontoKonto.Entity;
		}
		set
		{
			Konto previousValue = this._KontoKonto.Entity;
			if (((previousValue != value) 
						|| (this._KontoKonto.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KontoKonto.Entity = null;
					previousValue.Rad.Remove(this);
				}
				this._KontoKonto.Entity = value;
				if ((value != null))
				{
					value.Rad.Add(this);
					this._Konto = value.Id;
				}
				else
				{
					this._Konto = default(int);
				}
				this.SendPropertyChanged("KontoKonto");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Rad__Ver__38996AB5", Storage="_VerVer", ThisKey="Ver", OtherKey="Id", IsForeignKey=true)]
	public Ver VerVer
	{
		get
		{
			return this._VerVer.Entity;
		}
		set
		{
			Ver previousValue = this._VerVer.Entity;
			if (((previousValue != value) 
						|| (this._VerVer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VerVer.Entity = null;
					previousValue.Rad.Remove(this);
				}
				this._VerVer.Entity = value;
				if ((value != null))
				{
					value.Rad.Add(this);
					this._Ver = value.Id;
				}
				else
				{
					this._Ver = default(int);
				}
				this.SendPropertyChanged("VerVer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ver")]
public partial class Ver : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.DateTime _Verdate;
	
	private int _Vernumber;
	
	private int _Year;
	
	private string _Description;
	
	private string _Verifikatfil;
	
	private int _Creator;
	
	private System.DateTime _Creationdate;
	
	private EntitySet<Rad> _Rad;
	
	private EntityRef<LsjBokUser> _LsjBokUser;
	
	private EntityRef<Fiscalyear> _Fiscalyear;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVerdateChanging(System.DateTime value);
    partial void OnVerdateChanged();
    partial void OnVernumberChanging(int value);
    partial void OnVernumberChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVerifikatfilChanging(string value);
    partial void OnVerifikatfilChanged();
    partial void OnCreatorChanging(int value);
    partial void OnCreatorChanged();
    partial void OnCreationdateChanging(System.DateTime value);
    partial void OnCreationdateChanged();
    #endregion
	
	public Ver()
	{
		this._Rad = new EntitySet<Rad>(new Action<Rad>(this.attach_Rad), new Action<Rad>(this.detach_Rad));
		this._LsjBokUser = default(EntityRef<LsjBokUser>);
		this._Fiscalyear = default(EntityRef<Fiscalyear>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verdate", DbType="Date NOT NULL")]
	public System.DateTime Verdate
	{
		get
		{
			return this._Verdate;
		}
		set
		{
			if ((this._Verdate != value))
			{
				this.OnVerdateChanging(value);
				this.SendPropertyChanging();
				this._Verdate = value;
				this.SendPropertyChanged("Verdate");
				this.OnVerdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vernumber", DbType="Int NOT NULL")]
	public int Vernumber
	{
		get
		{
			return this._Vernumber;
		}
		set
		{
			if ((this._Vernumber != value))
			{
				this.OnVernumberChanging(value);
				this.SendPropertyChanging();
				this._Vernumber = value;
				this.SendPropertyChanged("Vernumber");
				this.OnVernumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
	public int Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				if (this._Fiscalyear.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verifikatfil", DbType="NVarChar(300)")]
	public string Verifikatfil
	{
		get
		{
			return this._Verifikatfil;
		}
		set
		{
			if ((this._Verifikatfil != value))
			{
				this.OnVerifikatfilChanging(value);
				this.SendPropertyChanging();
				this._Verifikatfil = value;
				this.SendPropertyChanged("Verifikatfil");
				this.OnVerifikatfilChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int NOT NULL")]
	public int Creator
	{
		get
		{
			return this._Creator;
		}
		set
		{
			if ((this._Creator != value))
			{
				if (this._LsjBokUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreatorChanging(value);
				this.SendPropertyChanging();
				this._Creator = value;
				this.SendPropertyChanged("Creator");
				this.OnCreatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creationdate", DbType="Date NOT NULL")]
	public System.DateTime Creationdate
	{
		get
		{
			return this._Creationdate;
		}
		set
		{
			if ((this._Creationdate != value))
			{
				this.OnCreationdateChanging(value);
				this.SendPropertyChanging();
				this._Creationdate = value;
				this.SendPropertyChanged("Creationdate");
				this.OnCreationdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Rad__Ver__38996AB5", Storage="_Rad", ThisKey="Id", OtherKey="Ver", DeleteRule="NO ACTION")]
	public EntitySet<Rad> Rad
	{
		get
		{
			return this._Rad;
		}
		set
		{
			this._Rad.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ver__Creator__35BCFE0A", Storage="_LsjBokUser", ThisKey="Creator", OtherKey="Id", IsForeignKey=true)]
	public LsjBokUser LsjBokUser
	{
		get
		{
			return this._LsjBokUser.Entity;
		}
		set
		{
			LsjBokUser previousValue = this._LsjBokUser.Entity;
			if (((previousValue != value) 
						|| (this._LsjBokUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LsjBokUser.Entity = null;
					previousValue.Ver.Remove(this);
				}
				this._LsjBokUser.Entity = value;
				if ((value != null))
				{
					value.Ver.Add(this);
					this._Creator = value.Id;
				}
				else
				{
					this._Creator = default(int);
				}
				this.SendPropertyChanged("LsjBokUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ver__Year__34C8D9D1", Storage="_Fiscalyear", ThisKey="Year", OtherKey="Id", IsForeignKey=true)]
	public Fiscalyear Fiscalyear
	{
		get
		{
			return this._Fiscalyear.Entity;
		}
		set
		{
			Fiscalyear previousValue = this._Fiscalyear.Entity;
			if (((previousValue != value) 
						|| (this._Fiscalyear.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Fiscalyear.Entity = null;
					previousValue.Ver.Remove(this);
				}
				this._Fiscalyear.Entity = value;
				if ((value != null))
				{
					value.Ver.Add(this);
					this._Year = value.Id;
				}
				else
				{
					this._Year = default(int);
				}
				this.SendPropertyChanged("Fiscalyear");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Rad(Rad entity)
	{
		this.SendPropertyChanging();
		entity.VerVer = this;
	}
	
	private void detach_Rad(Rad entity)
	{
		this.SendPropertyChanging();
		entity.VerVer = null;
	}
}
#pragma warning restore 1591
